
@using Microsoft.AspNetCore.Identity
@using BloodDonorship.Data.Models

@model BloodDonorship.Web.ViewModels.Donations.CreateDonationViewModel
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Create";
}



<h4>Make a Donation</h4>
<hr />
@if (!ViewData.ModelState.IsValid && ViewData.ModelState["Error"].Errors.Count > 0)
{
    <div class="alert alert-danger">
        @ViewData.ModelState["Error"].Errors.First().ErrorMessage
</div>
}
<div class="row">
    <div class="col-md-6">
        <form asp-action="Create" method="post" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group" hidden>
                <label asp-for="RequestId" class="control-label"></label>
                <input asp-for="RequestId" class="form-control" />
                <span asp-validation-for="RequestId" class="text-danger"></span>
            </div>
            <div class="form-group" hidden>
                <label asp-for="UserId" class="control-label"></label>
                <input type="text" name="UserId" value="@UserManager.GetUserId(this.User)" class="form-control"/>
                <span asp-validation-for="UserId" class="text-danger"></span>
            </div>

            <p>To complete the donation upload a verification document.</p>

            <div class="form-group">
                <label asp-for="FormFile"></label>
                <input asp-for="FormFile" class="form-control-file" />
                <span asp-validation-for="FormFile" class="text-danger"></span>
            </div>


            <div class="form-group">
                <input type="submit" value="Donate" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a class="btn btn-outline-primary" asp-controller="Home" asp-action="Index">Cancel</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
